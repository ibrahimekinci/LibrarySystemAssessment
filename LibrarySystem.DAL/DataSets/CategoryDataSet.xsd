<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CategoryDataSet" targetNamespace="http://tempuri.org/CategoryDataSet.xsd" xmlns:mstns="http://tempuri.org/CategoryDataSet.xsd" xmlns="http://tempuri.org/CategoryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="librarysystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="librarysystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LibrarySystem.DAL.Properties.Settings.GlobalReference.Default.librarysystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TabCategoryTableAdapter" GeneratorDataComponentClassName="TabCategoryTableAdapter" Name="TabCategory" UserDataComponentName="TabCategoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="librarysystemConnectionString (Settings)" DbObjectName="librarysystem.dbo.TabCategory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TabCategory] WHERE (([CID] = @Original_CID) AND ([CategoryName] = @Original_CategoryName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TabCategory] ([CategoryName]) VALUES (@CategoryName);
SELECT CID, CategoryName FROM TabCategory WHERE (CID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CID, CategoryName FROM dbo.TabCategory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TabCategory] SET [CategoryName] = @CategoryName WHERE (([CID] = @Original_CID) AND ([CategoryName] = @Original_CategoryName));
SELECT CID, CategoryName FROM TabCategory WHERE (CID = @CID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CID" ColumnName="CID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CID" DataSetColumn="CID" />
              <Mapping SourceColumn="CategoryName" DataSetColumn="CategoryName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="librarysystemConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteById" Modifier="Public" Name="DeleteById" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteById">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[TabCategory] WHERE [CID] = @Original_CID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_CID" ColumnName="CID" DataSourceName="librarysystem.dbo.TabCategory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_CID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CategoryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="CategoryDataSet" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="CategoryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TabCategory" msprop:Generator_RowClassName="TabCategoryRow" msprop:Generator_RowEvHandlerName="TabCategoryRowChangeEventHandler" msprop:Generator_RowDeletedName="TabCategoryRowDeleted" msprop:Generator_RowDeletingName="TabCategoryRowDeleting" msprop:Generator_RowEvArgName="TabCategoryRowChangeEvent" msprop:Generator_TablePropName="TabCategory" msprop:Generator_RowChangedName="TabCategoryRowChanged" msprop:Generator_UserTableName="TabCategory" msprop:Generator_RowChangingName="TabCategoryRowChanging" msprop:Generator_TableClassName="TabCategoryDataTable" msprop:Generator_TableVarName="tableTabCategory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CID" msprop:Generator_ColumnPropNameInTable="CIDColumn" msprop:Generator_ColumnPropNameInRow="CID" msprop:Generator_ColumnVarNameInTable="columnCID" type="xs:int" />
              <xs:element name="CategoryName" msprop:Generator_UserColumnName="CategoryName" msprop:Generator_ColumnPropNameInTable="CategoryNameColumn" msprop:Generator_ColumnPropNameInRow="CategoryName" msprop:Generator_ColumnVarNameInTable="columnCategoryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TabCategory" />
      <xs:field xpath="mstns:CID" />
    </xs:unique>
  </xs:element>
</xs:schema>